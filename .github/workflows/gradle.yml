# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      # contents: read
      contents: write

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Setup decompilation workspace
      run: ./gradlew setupDecompWorkspace
      
    - name: Build with Gradle Wrapper
      id: build
      run: ./gradlew build

    - name: Publish mod
      uses: Kir-Antipov/mc-publish@v3.3
      with:
        loaders: forge
#        version-type: beta
        version: ${{ steps.build.outputs.version }}
        version-type: ${{ steps.build.outputs.release_type }}
        game-versions: 1.12.2
        java: Java 1.8
        changelog: ${{ github.event.head_commit.message }}

        # Only include this section if you wish to publish
        # your assets on Modrinth.
        # modrinth-id: AANobbMI
        # modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

        # Only include this section if you wish to publish
        # your assets on CurseForge.
        curseforge-id: 322571
        curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
        
        # Only include this section if you wish to publish
        # your assets on GitHub.
        # github-token: ${{ secrets.GITHUB_TOKEN }}

        github-tag: ${{ steps.build.outputs.github_tag }}
        github-generate-changelog: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
        
        files: build/libs/!(*-@(dev|sources|all)).jar

        dependencies: |
          forgelin-continuous(required)
          patchouli(required)
          jei(optional)
          crafttweaker(optional)
          mtlib(optional)
          max-potion-id-extender(optional)

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: divine-favor
        path: build/libs
