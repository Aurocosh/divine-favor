package aurocosh.divinefavor.common.item.talismans.spell.common;

import aurocosh.divinefavor.common.config.common.ConfigTalismans;
import aurocosh.divinefavor.common.item.common.ModItems;
import aurocosh.divinefavor.common.item.talismans.spell.*;
import aurocosh.divinefavor.common.item.talismans.spell.base.ItemSpellTalisman;
import aurocosh.divinefavor.common.item.talismans.spell.base.SpellTalismanModPotion;
import aurocosh.divinefavor.common.item.talismans.spell.base.SpellTalismanModPotionCharge;
import aurocosh.divinefavor.common.item.talismans.spell.base.SpellTalismanModPotionToggle;
import aurocosh.divinefavor.common.potions.common.ModPotions;
import aurocosh.divinefavor.common.registry.ModRegistries;
import aurocosh.divinefavor.common.registry.mappers.ModMappers;
import aurocosh.divinefavor.common.util.UtilTick;

public final class ModSpellTalismans {
    public static ItemSpellTalisman armor_of_pacifist;
    public static ItemSpellTalisman arrow_throw_talisman;
    public static ItemSpellTalisman blade_of_grass;
    public static ItemSpellTalisman blink;
    public static ItemSpellTalisman blood_of_grass;
    public static ItemSpellTalisman bonemeal;
    public static ItemSpellTalisman butchering_strike;
    public static ItemSpellTalisman clock;
    public static ItemSpellTalisman combustion;
    public static ItemSpellTalisman consuming_fury;
    public static ItemSpellTalisman crushing_palm;
    public static ItemSpellTalisman crystalline_road;
    public static ItemSpellTalisman distant_spark;
    public static ItemSpellTalisman earthen_dive;
    public static ItemSpellTalisman empower_axe;
    public static ItemSpellTalisman empower_pickaxe;
    public static ItemSpellTalisman escape_plan;
    public static ItemSpellTalisman fall_negation;
    public static ItemSpellTalisman fell_tree;
    public static ItemSpellTalisman fins;
    public static ItemSpellTalisman focused_fury;
    public static ItemSpellTalisman gills;
    public static ItemSpellTalisman green_cycle;
    public static ItemSpellTalisman ground_flow;
    public static ItemSpellTalisman grudge;
    public static ItemSpellTalisman harvest;
    public static ItemSpellTalisman heat_wave;
    public static ItemSpellTalisman hellisphere;
    public static ItemSpellTalisman ignition;
    public static ItemSpellTalisman infernal_touch;
    public static ItemSpellTalisman miners_focus;
    public static ItemSpellTalisman mist_blade;
    public static ItemSpellTalisman molten_skin;
    public static ItemSpellTalisman nether_surge;
    public static ItemSpellTalisman night_eye;
    public static ItemSpellTalisman obsidian_road;
    public static ItemSpellTalisman overblink;
    public static ItemSpellTalisman overwarp;
    public static ItemSpellTalisman pearl_crumbs;
    public static ItemSpellTalisman piercing_inferno;
    public static ItemSpellTalisman searing_pulse;
    public static ItemSpellTalisman small_fireball_throw;
    public static ItemSpellTalisman snowball_throw;
    public static ItemSpellTalisman spider_might;
    public static ItemSpellTalisman starvation;
    public static ItemSpellTalisman stone_fever;
    public static ItemSpellTalisman stoneball_throw;
    public static ItemSpellTalisman surface_blink;
    public static ItemSpellTalisman surface_shift;
    public static ItemSpellTalisman toadic_jump;
    public static ItemSpellTalisman vitalize;
    public static ItemSpellTalisman wall_slip;
    public static ItemSpellTalisman warp;
    public static ItemSpellTalisman warp_gem;
    public static ItemSpellTalisman warp_pebble;
    public static ItemSpellTalisman invite_gem;
    public static ItemSpellTalisman invite_pebble;
    public static ItemSpellTalisman wild_sprint;
    public static ItemSpellTalisman wind_step;
    public static ItemSpellTalisman winter_breath;
    public static ItemSpellTalisman wooden_punch;

    public static void preInit() {
        armor_of_pacifist = ModRegistries.items.register(new SpellTalismanModPotionToggle("armor_of_pacifist", 10, ModPotions.armor_of_pacifist));
        arrow_throw_talisman = ModRegistries.items.register(new SpellTalismanArrowThrow());
        blade_of_grass = ModRegistries.items.register(new SpellTalismanBladeOfGrass());
        blink = ModRegistries.items.register(new SpellTalismanBlink("blink", 10, true, 10));
        blood_of_grass = ModRegistries.items.register(new SpellTalismanBloodOfGrass());
        bonemeal = ModRegistries.items.register(new SpellTalismanBonemeal());
        butchering_strike = ModRegistries.items.register(new SpellTalismanModPotionCharge("butchering_strike", 10, ModPotions.butchering_strike, 6));
        clock = ModRegistries.items.register(new SpellTalismanClock());
        combustion = ModRegistries.items.register(new SpellTalismanCombustion());
        consuming_fury = ModRegistries.items.register(new SpellTalismanModPotion("consuming_fury", 10, ModPotions.consuming_fury, UtilTick.minutesToTicks(1)));
        crushing_palm = ModRegistries.items.register(new SpellTalismanModPotionToggle("crushing_palm", 10, ModPotions.crushing_palm));
        crystalline_road = ModRegistries.items.register(new SpellTalismanModPotion("crystalline_road", 10, ModPotions.crystalline_road, UtilTick.minutesToTicks(1)));
        distant_spark = ModRegistries.items.register(new SpellTalismanIgnition("distant_spark", 20, true));
        earthen_dive = ModRegistries.items.register(new SpellTalismanEarthenDive());
        empower_axe = ModRegistries.items.register(new SpellTalismanModPotion("empower_axe", 10, ModPotions.empower_axe, UtilTick.minutesToTicks(1)));
        empower_pickaxe = ModRegistries.items.register(new SpellTalismanModPotion("empower_pickaxe", 10, ModPotions.empower_pickaxe, UtilTick.minutesToTicks(1)));
        escape_plan = ModRegistries.items.register(new SpellTalismanEscapePlan());
        fall_negation = ModRegistries.items.register(new SpellTalismanModPotionCharge("fall_negation", 10, ModPotions.fall_negation, 3));
        fell_tree = ModRegistries.items.register(new SpellTalismanFellTree());
        fins = ModRegistries.items.register(new SpellTalismanModPotion("fins", ConfigTalismans.fins.uses, ModPotions.fins, ConfigTalismans.fins.duration));
        focused_fury = ModRegistries.items.register(new SpellTalismanModPotion("focused_fury", 2, ModPotions.focused_fury, UtilTick.minutesToTicks(1)));
        gills = ModRegistries.items.register(new SpellTalismanModPotionToggle("gills", 5, ModPotions.gills));
        green_cycle = ModRegistries.items.register(new SpellTalismanGreenCycle());
        ground_flow = ModRegistries.items.register(new SpellTalismanModPotionToggle("ground_flow", 10, ModPotions.ground_flow));
        grudge = ModRegistries.items.register(new SpellTalismanGrudge());
        harvest = ModRegistries.items.register(new SpellTalismanHarvest());
        heat_wave = ModRegistries.items.register(new SpellTalismanHeatWave());
        hellisphere = ModRegistries.items.register(new SpellTalismanHellisphere());
        ignition = ModRegistries.items.register(new SpellTalismanIgnition("ignition", 30, false));
        infernal_touch = ModRegistries.items.register(new SpellTalismanInfernalTouch());
        invite_gem = ModRegistries.items.register(new SpellTalismanInviteMarker("invite_gem", 1, ModItems.invite_gem));
        invite_pebble = ModRegistries.items.register(new SpellTalismanInviteMarker("invite_pebble", 5, ModItems.invite_pebble));
        miners_focus = ModRegistries.items.register(new SpellTalismanMinersFocus());
        mist_blade = ModRegistries.items.register(new SpellTalismanModPotionToggle("mist_blade", 3, ModPotions.mist_blade));
        molten_skin = ModRegistries.items.register(new SpellTalismanMoltenSkin());
        nether_surge = ModRegistries.items.register(new SpellTalismanNetherSurge());
        night_eye = ModRegistries.items.register(new SpellTalismanModPotionToggle("night_eye", 4, ModPotions.night_eye));
        obsidian_road = ModRegistries.items.register(new SpellTalismanModPotion("obsidian_road", 5, ModPotions.obsidian_road, UtilTick.minutesToTicks(1)));
        overblink = ModRegistries.items.register(new SpellTalismanBlink("overblink", 10, true, 50));
        overwarp = ModRegistries.items.register(new SpellTalismanBlink("overwarp", 20, false, 80));
        pearl_crumbs = ModRegistries.items.register(new SpellTalismanPearlCrumbs());
        piercing_inferno = ModRegistries.items.register(new SpellTalismanPiercingInferno());
        searing_pulse = ModRegistries.items.register(new SpellTalismanSearingPulse());
        small_fireball_throw = ModRegistries.items.register(new SpellTalismanSmallFireballThrow());
        snowball_throw = ModRegistries.items.register(new SpellTalismanSnowballThrow());
        spider_might = ModRegistries.items.register(new SpellTalismanModPotion("spider_might", ConfigTalismans.spider_might.uses, ModPotions.spider_might, ConfigTalismans.spider_might.duration));
        starvation = ModRegistries.items.register(new SpellTalismanModPotion("starvation", 3, ModPotions.starvation, UtilTick.minutesToTicks(2.5f)));
        stone_fever = ModRegistries.items.register(new SpellTalismanModPotion("stone_fever", 2, ModPotions.stone_fever, UtilTick.minutesToTicks(5)));
        stoneball_throw = ModRegistries.items.register(new SpellTalismanStoneballThrow());
        surface_blink = ModRegistries.items.register(new SpellTalismanSurfaceBlink());
        surface_shift = ModRegistries.items.register(new SpellTalismanSurfaceShift());
        toadic_jump = ModRegistries.items.register(new SpellTalismanModPotionToggle("toadic_jump", 10, ModPotions.toadic_jump));
        vitalize = ModRegistries.items.register(new SpellTalismanVitalize());
        wall_slip = ModRegistries.items.register(new SpellTalismanWallSlip());
        warp = ModRegistries.items.register(new SpellTalismanBlink("warp", 30, false, 8));
        warp_gem = ModRegistries.items.register(new SpellTalismanWarpMarker("warp_gem", 1, ModItems.warp_gem));
        warp_pebble = ModRegistries.items.register(new SpellTalismanWarpMarker("warp_pebble", 5, ModItems.warp_pebble));
        wild_sprint = ModRegistries.items.register(new SpellTalismanModPotion("wild_sprint", 3, ModPotions.wild_charge, UtilTick.secondsToTicks(10)));
        wind_step = ModRegistries.items.register(new SpellTalismanWindStep());
        winter_breath = ModRegistries.items.register(new SpellTalismanWinterBreath());
        wooden_punch = ModRegistries.items.register(new SpellTalismanModPotionToggle("wooden_punch", 30, ModPotions.wooden_punch));

        ModMappers.talismans.register(ModRegistries.items.getValues(ItemSpellTalisman.class));
    }

    public static void init() {
    }
}